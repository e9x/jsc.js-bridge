common_src = [
    "wtf/ASCIICType.cpp",
    "wtf/Assertions.cpp",
    "wtf/AutomaticThread.cpp",
    "wtf/BitVector.cpp",
    "wtf/ClockType.cpp",
    "wtf/CompilationThread.cpp",
    "wtf/ConcurrentPtrHashSet.cpp",
    "wtf/CountingLock.cpp",
    "wtf/CPUTime.cpp",
    "wtf/CrossThreadCopier.cpp",
    "wtf/CrossThreadTaskHandler.cpp",
    "wtf/CryptographicallyRandomNumber.cpp",
    "wtf/CryptographicUtilities.cpp",
    "wtf/CurrentTime.cpp",
    "wtf/DataLog.cpp",
    "wtf/DateMath.cpp",
    "wtf/dtoa.cpp",
    "wtf/dtoa/bignum-dtoa.cc",
    "wtf/dtoa/bignum.cc",
    "wtf/dtoa/cached-powers.cc",
    "wtf/dtoa/diy-fp.cc",
    "wtf/dtoa/double-conversion.cc",
    "wtf/dtoa/fast-dtoa.cc",
    "wtf/dtoa/fixed-dtoa.cc",
    "wtf/dtoa/strtod.cc",
    "wtf/FastBitVector.cpp",
    "wtf/FastMalloc.cpp",
    "wtf/FilePrintStream.cpp",
    "wtf/FileSystem.cpp",
    "wtf/FunctionDispatcher.cpp",
    "wtf/Gigacage.cpp",
    "wtf/GlobalVersion.cpp",
    "wtf/GregorianDateTime.cpp",
    "wtf/HashTable.cpp",
    "wtf/HexNumber.cpp",
    "wtf/JSONValues.cpp",
    "wtf/JSValueMalloc.cpp",
    "wtf/Language.cpp",
    "wtf/Lock.cpp",
    "wtf/LockedPrintStream.cpp",
    "wtf/Logger.cpp",
    "wtf/MainThread.cpp",
    "wtf/MD5.cpp",
    "wtf/MediaTime.cpp",
    "wtf/MemoryPressureHandler.cpp",
    "wtf/MetaAllocator.cpp",
    "wtf/MonotonicTime.cpp",
    "wtf/ObjectIdentifier.cpp",
    "wtf/OSRandomSource.cpp",
    "wtf/PageBlock.cpp",
    "wtf/ParallelHelperPool.cpp",
    "wtf/ParallelJobsGeneric.cpp",
    "wtf/ParkingLot.cpp",
    "wtf/persistence/PersistentCoders.cpp",
    "wtf/persistence/PersistentDecoder.cpp",
    "wtf/persistence/PersistentEncoder.cpp",
    "wtf/PrintStream.cpp",
    "wtf/ProcessPrivilege.cpp",
    "wtf/RandomNumber.cpp",
    "wtf/ReadWriteLock.cpp",
    "wtf/RefCountedLeakCounter.cpp",
    "wtf/RunLoop.cpp",
    "wtf/Seconds.cpp",
    "wtf/SHA1.cpp",
    "wtf/SixCharacterHash.cpp",
    "wtf/SizeLimits.cpp",
    "wtf/StackBounds.cpp",
    "wtf/StackPointer.cpp",
    "wtf/StackStats.cpp",
    "wtf/StackTrace.cpp",
    "wtf/StringPrintStream.cpp",
    "wtf/text/ASCIILiteral.cpp",
    "wtf/text/AtomicString.cpp",
    "wtf/text/AtomicStringImpl.cpp",
    "wtf/text/AtomicStringTable.cpp",
    "wtf/text/Base64.cpp",
    "wtf/text/CString.cpp",
    "wtf/text/ExternalStringImpl.cpp",
    "wtf/text/icu/UTextProvider.cpp",
    "wtf/text/icu/UTextProviderLatin1.cpp",
    "wtf/text/icu/UTextProviderUTF16.cpp",
    "wtf/text/LineEnding.cpp",
    "wtf/text/StringBuilder.cpp",
    "wtf/text/StringBuilderJSON.cpp",
    "wtf/text/StringImpl.cpp",
    "wtf/text/StringView.cpp",
    "wtf/text/SymbolImpl.cpp",
    "wtf/text/SymbolRegistry.cpp",
    "wtf/text/TextBreakIterator.cpp",
    "wtf/text/TextStream.cpp",
    "wtf/text/WTFString.cpp",
    "wtf/ThreadGroup.cpp",
    "wtf/Threading.cpp",
    "wtf/threads/BinarySemaphore.cpp",
    "wtf/TimeWithDynamicClockType.cpp",
    "wtf/TimingScope.cpp",
    "wtf/unicode/CollatorDefault.cpp",
    "wtf/unicode/icu/CollatorICU.cpp",
    "wtf/unicode/UTF8Conversion.cpp",
    "wtf/unix/LanguageUnix.cpp",
    "wtf/URL.cpp",
    "wtf/URLHelpers.cpp",
    "wtf/URLParser.cpp",
    "wtf/UUID.cpp",
    "wtf/WallTime.cpp",
    "wtf/WordLock.cpp",
    "wtf/WorkerPool.cpp",
    "wtf/WorkQueue.cpp",
    "wtf/WTFAssertions.cpp",
]

if (target_os == "wasm") {
    platform_src = [
        "wtf/posix/FileSystemPOSIX.cpp",
        "wtf/posix/OSAllocatorPosix.cpp",
        "wtf/posix/ThreadingPOSIX.cpp",
        "wtf/generic/MainThreadGeneric.cpp",
        "wtf/generic/MemoryFootprintGeneric.cpp",
        "wtf/generic/MemoryPressureHandlerGeneric.cpp",
        "wtf/generic/RunLoopGeneric.cpp",
        "wtf/generic/WorkQueueGeneric.cpp",
        "wtf/JSC.js/CPUTime.cpp",
        "wtf/JSC.js/FileSystem.cpp",
        "wtf/JSC.js/NumberOfCores.cpp",
        "wtf/JSC.js/RAMSize.cpp",
        "wtf/JSC.js/RandomDeviceGeneric.cpp",
        "wtf/JSC.js/TextBreakIteratorInternalICU.cpp",
        "wtf/JSC.js/ThreadMessage.cpp",
    ]
} else if (target_os == "win") {
    platform_src = [
        "wtf/generic/RunLoopGeneric.cpp",
        "wtf/generic/WorkQueueGeneric.cpp",
        "wtf/text/win/StringWin.cpp",
        "wtf/text/win/TextBreakIteratorInternalICUWin.cpp",
        "wtf/NumberOfCores.cpp",
        "wtf/RAMSize.cpp",
        "wtf/RandomDevice.cpp",
        "wtf/win/CPUTimeWin.cpp",
        "wtf/win/DbgHelperWin.cpp",
        "wtf/win/FileSystemWin.cpp",
        "wtf/win/MainThreadWin.cpp",
        "wtf/win/MemoryFootprintWin.cpp",
        "wtf/win/MemoryPressureHandlerWin.cpp",
        "wtf/win/OSAllocatorWin.cpp",
        "wtf/win/PathWalker.cpp",
        "wtf/win/ThreadingWin.cpp",
        "wtf/win/ThreadSpecificWin.cpp",
    ]
}

config("wtf_config_public") {
    include_dirs = [
        ".",
    ]
    defines = [
        "STATICALLY_LINKED_WITH_WTF",
    ]
}

config("wtf_config") {
    defines = [
        "BUILDING_WTF",
    ]
    include_dirs = [
        "wtf",
        "wtf/text",
        "wtf/text/icu",
    ]
}

static_library("wtf") {
    sources = common_src + platform_src
    configs += [
        ":wtf_config",
    ]
    public_configs = [
        ":wtf_config_public",
    ]
    public_deps = [
        "//Source/icu:icu",
    ]
}
