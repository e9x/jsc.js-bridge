# SHA1Hash: da39a3ee5e6b4b0d3255bfef95601890afd80709
# Copyright (C) 2019 Apple Inc. All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS "AS IS" AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Autogenerated from /mnt/d/Dev/webkit-04062019/Source/JavaScriptCore/bytecode/BytecodeList.rb, do not modify.

setEntryAddress(0, _llint_op_create_this)
setEntryAddress(1, _llint_op_get_argument)
setEntryAddress(2, _llint_op_to_this)
setEntryAddress(3, _llint_op_new_object)
setEntryAddress(4, _llint_op_new_array)
setEntryAddress(5, _llint_op_new_array_with_size)
setEntryAddress(6, _llint_op_new_array_buffer)
setEntryAddress(7, _llint_op_add)
setEntryAddress(8, _llint_op_mul)
setEntryAddress(9, _llint_op_div)
setEntryAddress(10, _llint_op_sub)
setEntryAddress(11, _llint_op_bitand)
setEntryAddress(12, _llint_op_bitor)
setEntryAddress(13, _llint_op_bitxor)
setEntryAddress(14, _llint_op_bitnot)
setEntryAddress(15, _llint_op_to_object)
setEntryAddress(16, _llint_op_to_number)
setEntryAddress(17, _llint_op_negate)
setEntryAddress(18, _llint_op_in_by_val)
setEntryAddress(19, _llint_op_get_by_id)
setEntryAddress(20, _llint_op_get_by_id_with_this)
setEntryAddress(21, _llint_op_get_by_val_with_this)
setEntryAddress(22, _llint_op_get_by_id_direct)
setEntryAddress(23, _llint_op_try_get_by_id)
setEntryAddress(24, _llint_op_put_by_id)
setEntryAddress(25, _llint_op_get_by_val)
setEntryAddress(26, _llint_op_put_by_val)
setEntryAddress(27, _llint_op_put_by_val_direct)
setEntryAddress(28, _llint_op_jneq_ptr)
setEntryAddress(29, _llint_op_call)
setEntryAddress(30, _llint_op_tail_call)
setEntryAddress(31, _llint_op_call_eval)
setEntryAddress(32, _llint_op_call_varargs)
setEntryAddress(33, _llint_op_tail_call_varargs)
setEntryAddress(34, _llint_op_tail_call_forward_arguments)
setEntryAddress(35, _llint_op_construct)
setEntryAddress(36, _llint_op_construct_varargs)
setEntryAddress(37, _llint_op_resolve_scope)
setEntryAddress(38, _llint_op_get_from_scope)
setEntryAddress(39, _llint_op_put_to_scope)
setEntryAddress(40, _llint_op_get_from_arguments)
setEntryAddress(41, _llint_op_catch)
setEntryAddress(42, _llint_op_profile_type)
setEntryAddress(43, _llint_op_profile_control_flow)
setEntryAddress(44, _llint_op_has_indexed_property)
setEntryAddress(45, _llint_op_get_direct_pname)
setEntryAddress(46, _llint_op_wide)
setEntryAddress(47, _llint_op_enter)
setEntryAddress(48, _llint_op_get_scope)
setEntryAddress(49, _llint_op_create_direct_arguments)
setEntryAddress(50, _llint_op_create_scoped_arguments)
setEntryAddress(51, _llint_op_create_cloned_arguments)
setEntryAddress(52, _llint_op_argument_count)
setEntryAddress(53, _llint_op_check_tdz)
setEntryAddress(54, _llint_op_new_array_with_spread)
setEntryAddress(55, _llint_op_spread)
setEntryAddress(56, _llint_op_new_regexp)
setEntryAddress(57, _llint_op_mov)
setEntryAddress(58, _llint_op_eq)
setEntryAddress(59, _llint_op_neq)
setEntryAddress(60, _llint_op_stricteq)
setEntryAddress(61, _llint_op_nstricteq)
setEntryAddress(62, _llint_op_less)
setEntryAddress(63, _llint_op_lesseq)
setEntryAddress(64, _llint_op_greater)
setEntryAddress(65, _llint_op_greatereq)
setEntryAddress(66, _llint_op_below)
setEntryAddress(67, _llint_op_beloweq)
setEntryAddress(68, _llint_op_mod)
setEntryAddress(69, _llint_op_pow)
setEntryAddress(70, _llint_op_lshift)
setEntryAddress(71, _llint_op_rshift)
setEntryAddress(72, _llint_op_urshift)
setEntryAddress(73, _llint_op_eq_null)
setEntryAddress(74, _llint_op_neq_null)
setEntryAddress(75, _llint_op_to_string)
setEntryAddress(76, _llint_op_unsigned)
setEntryAddress(77, _llint_op_is_empty)
setEntryAddress(78, _llint_op_is_undefined)
setEntryAddress(79, _llint_op_is_undefined_or_null)
setEntryAddress(80, _llint_op_is_boolean)
setEntryAddress(81, _llint_op_is_number)
setEntryAddress(82, _llint_op_is_object)
setEntryAddress(83, _llint_op_is_object_or_null)
setEntryAddress(84, _llint_op_is_function)
setEntryAddress(85, _llint_op_inc)
setEntryAddress(86, _llint_op_dec)
setEntryAddress(87, _llint_op_not)
setEntryAddress(88, _llint_op_identity_with_profile)
setEntryAddress(89, _llint_op_overrides_has_instance)
setEntryAddress(90, _llint_op_instanceof)
setEntryAddress(91, _llint_op_instanceof_custom)
setEntryAddress(92, _llint_op_typeof)
setEntryAddress(93, _llint_op_is_cell_with_type)
setEntryAddress(94, _llint_op_in_by_id)
setEntryAddress(95, _llint_op_put_by_id_with_this)
setEntryAddress(96, _llint_op_del_by_id)
setEntryAddress(97, _llint_op_put_by_val_with_this)
setEntryAddress(98, _llint_op_del_by_val)
setEntryAddress(99, _llint_op_put_getter_by_id)
setEntryAddress(100, _llint_op_put_setter_by_id)
setEntryAddress(101, _llint_op_put_getter_setter_by_id)
setEntryAddress(102, _llint_op_put_getter_by_val)
setEntryAddress(103, _llint_op_put_setter_by_val)
setEntryAddress(104, _llint_op_define_data_property)
setEntryAddress(105, _llint_op_define_accessor_property)
setEntryAddress(106, _llint_op_jmp)
setEntryAddress(107, _llint_op_jtrue)
setEntryAddress(108, _llint_op_jfalse)
setEntryAddress(109, _llint_op_jeq_null)
setEntryAddress(110, _llint_op_jneq_null)
setEntryAddress(111, _llint_op_jeq)
setEntryAddress(112, _llint_op_jstricteq)
setEntryAddress(113, _llint_op_jneq)
setEntryAddress(114, _llint_op_jnstricteq)
setEntryAddress(115, _llint_op_jless)
setEntryAddress(116, _llint_op_jlesseq)
setEntryAddress(117, _llint_op_jgreater)
setEntryAddress(118, _llint_op_jgreatereq)
setEntryAddress(119, _llint_op_jnless)
setEntryAddress(120, _llint_op_jnlesseq)
setEntryAddress(121, _llint_op_jngreater)
setEntryAddress(122, _llint_op_jngreatereq)
setEntryAddress(123, _llint_op_jbelow)
setEntryAddress(124, _llint_op_jbeloweq)
setEntryAddress(125, _llint_op_loop_hint)
setEntryAddress(126, _llint_op_switch_imm)
setEntryAddress(127, _llint_op_switch_char)
setEntryAddress(128, _llint_op_switch_string)
setEntryAddress(129, _llint_op_new_func)
setEntryAddress(130, _llint_op_new_func_exp)
setEntryAddress(131, _llint_op_new_generator_func)
setEntryAddress(132, _llint_op_new_generator_func_exp)
setEntryAddress(133, _llint_op_new_async_func)
setEntryAddress(134, _llint_op_new_async_func_exp)
setEntryAddress(135, _llint_op_new_async_generator_func)
setEntryAddress(136, _llint_op_new_async_generator_func_exp)
setEntryAddress(137, _llint_op_set_function_name)
setEntryAddress(138, _llint_op_ret)
setEntryAddress(139, _llint_op_strcat)
setEntryAddress(140, _llint_op_to_primitive)
setEntryAddress(141, _llint_op_put_to_arguments)
setEntryAddress(142, _llint_op_push_with_scope)
setEntryAddress(143, _llint_op_create_lexical_environment)
setEntryAddress(144, _llint_op_create_generator_frame_environment)
setEntryAddress(145, _llint_op_get_parent_scope)
setEntryAddress(146, _llint_op_throw)
setEntryAddress(147, _llint_op_throw_static_error)
setEntryAddress(148, _llint_op_debug)
setEntryAddress(149, _llint_op_end)
setEntryAddress(150, _llint_op_get_enumerable_length)
setEntryAddress(151, _llint_op_has_structure_property)
setEntryAddress(152, _llint_op_has_generic_property)
setEntryAddress(153, _llint_op_get_property_enumerator)
setEntryAddress(154, _llint_op_enumerator_structure_pname)
setEntryAddress(155, _llint_op_enumerator_generic_pname)
setEntryAddress(156, _llint_op_to_index_string)
setEntryAddress(157, _llint_op_unreachable)
setEntryAddress(158, _llint_op_create_rest)
setEntryAddress(159, _llint_op_get_rest_length)
setEntryAddress(160, _llint_op_yield)
setEntryAddress(161, _llint_op_check_traps)
setEntryAddress(162, _llint_op_log_shadow_chicken_prologue)
setEntryAddress(163, _llint_op_log_shadow_chicken_tail)
setEntryAddress(164, _llint_op_resolve_scope_for_hoisting_func_decl_in_eval)
setEntryAddress(165, _llint_op_nop)
setEntryAddress(166, _llint_op_super_sampler_begin)
setEntryAddress(167, _llint_op_super_sampler_end)
setEntryAddress(168, _llint_program_prologue)
setEntryAddress(169, _llint_eval_prologue)
setEntryAddress(170, _llint_module_program_prologue)
setEntryAddress(171, _llint_function_for_call_prologue)
setEntryAddress(172, _llint_function_for_construct_prologue)
setEntryAddress(173, _llint_function_for_call_arity_check)
setEntryAddress(174, _llint_function_for_construct_arity_check)
setEntryAddress(175, _llint_generic_return_point)
setEntryAddress(176, _llint_throw_from_slow_path_trampoline)
setEntryAddress(177, _llint_throw_during_call_trampoline)
setEntryAddress(178, _llint_native_call_trampoline)
setEntryAddress(179, _llint_native_construct_trampoline)
setEntryAddress(180, _llint_internal_function_call_trampoline)
setEntryAddress(181, _llint_internal_function_construct_trampoline)
setEntryAddress(182, _handleUncaughtException)
setEntryAddressWide(0, _llint_op_create_this_wide)
setEntryAddressWide(1, _llint_op_get_argument_wide)
setEntryAddressWide(2, _llint_op_to_this_wide)
setEntryAddressWide(3, _llint_op_new_object_wide)
setEntryAddressWide(4, _llint_op_new_array_wide)
setEntryAddressWide(5, _llint_op_new_array_with_size_wide)
setEntryAddressWide(6, _llint_op_new_array_buffer_wide)
setEntryAddressWide(7, _llint_op_add_wide)
setEntryAddressWide(8, _llint_op_mul_wide)
setEntryAddressWide(9, _llint_op_div_wide)
setEntryAddressWide(10, _llint_op_sub_wide)
setEntryAddressWide(11, _llint_op_bitand_wide)
setEntryAddressWide(12, _llint_op_bitor_wide)
setEntryAddressWide(13, _llint_op_bitxor_wide)
setEntryAddressWide(14, _llint_op_bitnot_wide)
setEntryAddressWide(15, _llint_op_to_object_wide)
setEntryAddressWide(16, _llint_op_to_number_wide)
setEntryAddressWide(17, _llint_op_negate_wide)
setEntryAddressWide(18, _llint_op_in_by_val_wide)
setEntryAddressWide(19, _llint_op_get_by_id_wide)
setEntryAddressWide(20, _llint_op_get_by_id_with_this_wide)
setEntryAddressWide(21, _llint_op_get_by_val_with_this_wide)
setEntryAddressWide(22, _llint_op_get_by_id_direct_wide)
setEntryAddressWide(23, _llint_op_try_get_by_id_wide)
setEntryAddressWide(24, _llint_op_put_by_id_wide)
setEntryAddressWide(25, _llint_op_get_by_val_wide)
setEntryAddressWide(26, _llint_op_put_by_val_wide)
setEntryAddressWide(27, _llint_op_put_by_val_direct_wide)
setEntryAddressWide(28, _llint_op_jneq_ptr_wide)
setEntryAddressWide(29, _llint_op_call_wide)
setEntryAddressWide(30, _llint_op_tail_call_wide)
setEntryAddressWide(31, _llint_op_call_eval_wide)
setEntryAddressWide(32, _llint_op_call_varargs_wide)
setEntryAddressWide(33, _llint_op_tail_call_varargs_wide)
setEntryAddressWide(34, _llint_op_tail_call_forward_arguments_wide)
setEntryAddressWide(35, _llint_op_construct_wide)
setEntryAddressWide(36, _llint_op_construct_varargs_wide)
setEntryAddressWide(37, _llint_op_resolve_scope_wide)
setEntryAddressWide(38, _llint_op_get_from_scope_wide)
setEntryAddressWide(39, _llint_op_put_to_scope_wide)
setEntryAddressWide(40, _llint_op_get_from_arguments_wide)
setEntryAddressWide(41, _llint_op_catch_wide)
setEntryAddressWide(42, _llint_op_profile_type_wide)
setEntryAddressWide(43, _llint_op_profile_control_flow_wide)
setEntryAddressWide(44, _llint_op_has_indexed_property_wide)
setEntryAddressWide(45, _llint_op_get_direct_pname_wide)
setEntryAddressWide(46, _llint_op_wide_wide)
setEntryAddressWide(47, _llint_op_enter_wide)
setEntryAddressWide(48, _llint_op_get_scope_wide)
setEntryAddressWide(49, _llint_op_create_direct_arguments_wide)
setEntryAddressWide(50, _llint_op_create_scoped_arguments_wide)
setEntryAddressWide(51, _llint_op_create_cloned_arguments_wide)
setEntryAddressWide(52, _llint_op_argument_count_wide)
setEntryAddressWide(53, _llint_op_check_tdz_wide)
setEntryAddressWide(54, _llint_op_new_array_with_spread_wide)
setEntryAddressWide(55, _llint_op_spread_wide)
setEntryAddressWide(56, _llint_op_new_regexp_wide)
setEntryAddressWide(57, _llint_op_mov_wide)
setEntryAddressWide(58, _llint_op_eq_wide)
setEntryAddressWide(59, _llint_op_neq_wide)
setEntryAddressWide(60, _llint_op_stricteq_wide)
setEntryAddressWide(61, _llint_op_nstricteq_wide)
setEntryAddressWide(62, _llint_op_less_wide)
setEntryAddressWide(63, _llint_op_lesseq_wide)
setEntryAddressWide(64, _llint_op_greater_wide)
setEntryAddressWide(65, _llint_op_greatereq_wide)
setEntryAddressWide(66, _llint_op_below_wide)
setEntryAddressWide(67, _llint_op_beloweq_wide)
setEntryAddressWide(68, _llint_op_mod_wide)
setEntryAddressWide(69, _llint_op_pow_wide)
setEntryAddressWide(70, _llint_op_lshift_wide)
setEntryAddressWide(71, _llint_op_rshift_wide)
setEntryAddressWide(72, _llint_op_urshift_wide)
setEntryAddressWide(73, _llint_op_eq_null_wide)
setEntryAddressWide(74, _llint_op_neq_null_wide)
setEntryAddressWide(75, _llint_op_to_string_wide)
setEntryAddressWide(76, _llint_op_unsigned_wide)
setEntryAddressWide(77, _llint_op_is_empty_wide)
setEntryAddressWide(78, _llint_op_is_undefined_wide)
setEntryAddressWide(79, _llint_op_is_undefined_or_null_wide)
setEntryAddressWide(80, _llint_op_is_boolean_wide)
setEntryAddressWide(81, _llint_op_is_number_wide)
setEntryAddressWide(82, _llint_op_is_object_wide)
setEntryAddressWide(83, _llint_op_is_object_or_null_wide)
setEntryAddressWide(84, _llint_op_is_function_wide)
setEntryAddressWide(85, _llint_op_inc_wide)
setEntryAddressWide(86, _llint_op_dec_wide)
setEntryAddressWide(87, _llint_op_not_wide)
setEntryAddressWide(88, _llint_op_identity_with_profile_wide)
setEntryAddressWide(89, _llint_op_overrides_has_instance_wide)
setEntryAddressWide(90, _llint_op_instanceof_wide)
setEntryAddressWide(91, _llint_op_instanceof_custom_wide)
setEntryAddressWide(92, _llint_op_typeof_wide)
setEntryAddressWide(93, _llint_op_is_cell_with_type_wide)
setEntryAddressWide(94, _llint_op_in_by_id_wide)
setEntryAddressWide(95, _llint_op_put_by_id_with_this_wide)
setEntryAddressWide(96, _llint_op_del_by_id_wide)
setEntryAddressWide(97, _llint_op_put_by_val_with_this_wide)
setEntryAddressWide(98, _llint_op_del_by_val_wide)
setEntryAddressWide(99, _llint_op_put_getter_by_id_wide)
setEntryAddressWide(100, _llint_op_put_setter_by_id_wide)
setEntryAddressWide(101, _llint_op_put_getter_setter_by_id_wide)
setEntryAddressWide(102, _llint_op_put_getter_by_val_wide)
setEntryAddressWide(103, _llint_op_put_setter_by_val_wide)
setEntryAddressWide(104, _llint_op_define_data_property_wide)
setEntryAddressWide(105, _llint_op_define_accessor_property_wide)
setEntryAddressWide(106, _llint_op_jmp_wide)
setEntryAddressWide(107, _llint_op_jtrue_wide)
setEntryAddressWide(108, _llint_op_jfalse_wide)
setEntryAddressWide(109, _llint_op_jeq_null_wide)
setEntryAddressWide(110, _llint_op_jneq_null_wide)
setEntryAddressWide(111, _llint_op_jeq_wide)
setEntryAddressWide(112, _llint_op_jstricteq_wide)
setEntryAddressWide(113, _llint_op_jneq_wide)
setEntryAddressWide(114, _llint_op_jnstricteq_wide)
setEntryAddressWide(115, _llint_op_jless_wide)
setEntryAddressWide(116, _llint_op_jlesseq_wide)
setEntryAddressWide(117, _llint_op_jgreater_wide)
setEntryAddressWide(118, _llint_op_jgreatereq_wide)
setEntryAddressWide(119, _llint_op_jnless_wide)
setEntryAddressWide(120, _llint_op_jnlesseq_wide)
setEntryAddressWide(121, _llint_op_jngreater_wide)
setEntryAddressWide(122, _llint_op_jngreatereq_wide)
setEntryAddressWide(123, _llint_op_jbelow_wide)
setEntryAddressWide(124, _llint_op_jbeloweq_wide)
setEntryAddressWide(125, _llint_op_loop_hint_wide)
setEntryAddressWide(126, _llint_op_switch_imm_wide)
setEntryAddressWide(127, _llint_op_switch_char_wide)
setEntryAddressWide(128, _llint_op_switch_string_wide)
setEntryAddressWide(129, _llint_op_new_func_wide)
setEntryAddressWide(130, _llint_op_new_func_exp_wide)
setEntryAddressWide(131, _llint_op_new_generator_func_wide)
setEntryAddressWide(132, _llint_op_new_generator_func_exp_wide)
setEntryAddressWide(133, _llint_op_new_async_func_wide)
setEntryAddressWide(134, _llint_op_new_async_func_exp_wide)
setEntryAddressWide(135, _llint_op_new_async_generator_func_wide)
setEntryAddressWide(136, _llint_op_new_async_generator_func_exp_wide)
setEntryAddressWide(137, _llint_op_set_function_name_wide)
setEntryAddressWide(138, _llint_op_ret_wide)
setEntryAddressWide(139, _llint_op_strcat_wide)
setEntryAddressWide(140, _llint_op_to_primitive_wide)
setEntryAddressWide(141, _llint_op_put_to_arguments_wide)
setEntryAddressWide(142, _llint_op_push_with_scope_wide)
setEntryAddressWide(143, _llint_op_create_lexical_environment_wide)
setEntryAddressWide(144, _llint_op_create_generator_frame_environment_wide)
setEntryAddressWide(145, _llint_op_get_parent_scope_wide)
setEntryAddressWide(146, _llint_op_throw_wide)
setEntryAddressWide(147, _llint_op_throw_static_error_wide)
setEntryAddressWide(148, _llint_op_debug_wide)
setEntryAddressWide(149, _llint_op_end_wide)
setEntryAddressWide(150, _llint_op_get_enumerable_length_wide)
setEntryAddressWide(151, _llint_op_has_structure_property_wide)
setEntryAddressWide(152, _llint_op_has_generic_property_wide)
setEntryAddressWide(153, _llint_op_get_property_enumerator_wide)
setEntryAddressWide(154, _llint_op_enumerator_structure_pname_wide)
setEntryAddressWide(155, _llint_op_enumerator_generic_pname_wide)
setEntryAddressWide(156, _llint_op_to_index_string_wide)
setEntryAddressWide(157, _llint_op_unreachable_wide)
setEntryAddressWide(158, _llint_op_create_rest_wide)
setEntryAddressWide(159, _llint_op_get_rest_length_wide)
setEntryAddressWide(160, _llint_op_yield_wide)
setEntryAddressWide(161, _llint_op_check_traps_wide)
setEntryAddressWide(162, _llint_op_log_shadow_chicken_prologue_wide)
setEntryAddressWide(163, _llint_op_log_shadow_chicken_tail_wide)
setEntryAddressWide(164, _llint_op_resolve_scope_for_hoisting_func_decl_in_eval_wide)
setEntryAddressWide(165, _llint_op_nop_wide)
setEntryAddressWide(166, _llint_op_super_sampler_begin_wide)
setEntryAddressWide(167, _llint_op_super_sampler_end_wide)
setEntryAddressWide(168, _llint_program_prologue_wide)
setEntryAddressWide(169, _llint_eval_prologue_wide)
setEntryAddressWide(170, _llint_module_program_prologue_wide)
setEntryAddressWide(171, _llint_function_for_call_prologue_wide)
setEntryAddressWide(172, _llint_function_for_construct_prologue_wide)
setEntryAddressWide(173, _llint_function_for_call_arity_check_wide)
setEntryAddressWide(174, _llint_function_for_construct_arity_check_wide)
setEntryAddressWide(175, _llint_generic_return_point_wide)
setEntryAddressWide(176, _llint_throw_from_slow_path_trampoline_wide)
setEntryAddressWide(177, _llint_throw_during_call_trampoline_wide)
setEntryAddressWide(178, _llint_native_call_trampoline_wide)
setEntryAddressWide(179, _llint_native_construct_trampoline_wide)
setEntryAddressWide(180, _llint_internal_function_call_trampoline_wide)
setEntryAddressWide(181, _llint_internal_function_construct_trampoline_wide)
setEntryAddressWide(182, _handleUncaughtException_wide)
